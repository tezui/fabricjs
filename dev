
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Fabric.js Image Editor</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fabric.js/4.5.0/fabric.min.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        canvas {
            border: 1px solid black;
        }

        .toolbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: #f2f2f2;
        }

        .toolbar select {
            margin-left: 10px;
            padding: 5px;
            border-radius: 5px;
        }

        .toolbar button {
            padding: 5px 10px;
            border-radius: 5px;
            border: none;
            background-color: #4CAF50;
            color: white;
            cursor: pointer;
        }

        .toolbar button:hover {
            background-color: #3e8e41;
        }
    </style>
</head>

<body>
    <div class="toolbar">
        <div>
            <button id="addText">Add Text</button>
            <input type="file" id="imageLoader">
            <button id="drawRectangle">Draw Rectangle</button>
        </div>
        <div>
            <select id="fontFamily">
                <option value="Arial">Arial</option>
                <option value="Tahoma">Tahoma</option>
                <option value="Roboto">Roboto</option>
            </select>
            <input type="color" id="fontColor">
        </div>
    </div>
    <canvas id="canvas" width="600" height="600"></canvas>
    <script>
        var canvas = new fabric.Canvas('canvas');
        var addTextButton = document.getElementById('addText');
        var imageLoader = document.getElementById('imageLoader');
        var drawRectangleButton = document.getElementById('drawRectangle');
        var fontFamilySelect = document.getElementById('fontFamily');
        var fontColorInput = document.getElementById('fontColor');

        addTextButton.addEventListener('click', function () {
            var text = new fabric.IText('Type Text', {
                type: 'text',
                width: 200,
                fontSize: 20,
                left: 20,
                top: 20,
                fill: '#444'
            });
            canvas.add(text);
            canvas.setActiveObject(text);
        });

        imageLoader.addEventListener('change', function (e) {
            var file = e.target.files[0];
            var reader = new FileReader();
            reader.onload = function (f) {
                var data = f.target.result;
                fabric.Image.fromURL(data, function (img) {
                    var oImg = img.set({
                        left: 0,
                        top: 0,
                        angle: 0,
                        width: 600,
                        height: 600
                    });
                    canvas.setBackgroundImage(oImg, canvas.renderAll.bind(canvas), {
                        scaleX: canvas.width / oImg.width,
                        scaleY: canvas.height / oImg.height
                    });
                });
            };
            reader.readAsDataURL(file);
        });

        drawRectangleButton.addEventListener('click', function () {
            var rect = new fabric.Rect({
                left: 100,
                top: 100,
                fill: 'transparent',
                stroke: 'black',
                strokeWidth: 2,
                width: 100,
                height: 100
            });
            canvas.add(rect);
            canvas.setActiveObject(rect);
        });

        fontFamilySelect.addEventListener('change', function () {
            var activeObject = canvas.getActiveObject();
            if (activeObject && activeObject.type === 'text') {
                activeObject.set('fontFamily', this.value);
                canvas.renderAll();
            }
        });

        fontColorInput.addEventListener('change', function () {
            var activeObject = canvas.getActiveObject();
            if (activeObject && activeObject.type === 'text') {
                activeObject.set('fill', this.value);
                canvas.renderAll();
            }
        });
    </script>
</body>

</html>
